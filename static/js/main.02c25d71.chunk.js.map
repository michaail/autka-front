{"version":3,"sources":["components/AutoCompleteSearch.js","components/TableSearch.js","components/TableNew.js","conf.js","components/TableSearchParent.js","components/AuctionParent.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["AutoCompleteSearch","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","onChange","bind","assertThisInitialized","onSelect","nextProps","props","clear","setState","onInputChange","onSelectedValue","_this$props","placeholder","dataSource","react_default","a","createElement","auto_complete","style","width","filterOption","inputValue","option","children","toUpperCase","indexOf","allowClear","Component","defaultProps","TableSearch","selectedMake","inputMake","inputModel","clearMakeCtr","clearModelCtr","expand","minYear","maxYear","minPrice","maxPrice","handleSearch","handleReset","handleMakeSelected","handleMakeInputChange","handleModelInputChange","toggle","e","preventDefault","onSearch","_this$state","make","model","prev","_this2","_this$state2","makes","es_form","layout","className","onSubmit","row","col","span","offset","Item","label","AutoCompleteSearch_AutoCompleteSearch","keys","sort","undefined","es_button","type","htmlType","icon","onClick","display","input_number","val","formatter","concat","replace","parser","step","TableNew","locationDict","201","202","205","206","207","295","columns","title","key","dataIndex","render","text","href","target","rel","filters","date","Date","dateString","getDate","getMonth","getFullYear","docs","pagination","pageSize","showQuickJumper","loading","componentWillReceiveProps","handleTableChange","nextProp","pageInfo","sorter","onTableChange","table","size","conf","config","API_URL","queryStringFor","field","query","qs","forEach","x","TableSearchParent","searchPage","_ref","asyncToGenerator","regenerator_default","mark","_callee","pageData","search","sorters","recvData","data","documents","meta","wrap","_context","next","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","sent","json","objectSpread","total","totalCount","stop","_x","_x2","_x3","_x4","apply","arguments","handleSearchReset","getPage","getMakes","page","queryString","param","current","entries","length","constructor","TableSearch_TableSearch","TableNew_TableNew","AuctionParent","handleChange","handleSubmit","getLot","lotID","input","Main","react_router_dom","HeaderMenu","react_router","exact","path","component","menu","mode","defaultSelectedKeys","to","App","Main_Main","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02c25d71.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { AutoComplete } from 'antd';\n\nimport 'react-table/react-table.css';\n\nexport default class AutoCompleteSearch extends Component {\n  constructor() {\n    super();\n    this.state = {\n      value: '',\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    // this.onLeave = this.onLeave.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { clear } = this.props;\n    if (clear !== nextProps.clear) {\n      this.setState({\n        value: '',\n      });\n    }\n  }\n\n  onChange(value) {\n    const { onInputChange } = this.props;\n    this.setState({\n      value,\n    });\n    onInputChange(value);\n  }\n\n  onSelect(value) {\n    const { onSelectedValue } = this.props;\n    onSelectedValue(value);\n  }\n\n  // onLeave(value) {\n  //   const { onInputLeave } = this.props;\n  //   onInputLeave(value);\n  // }\n\n  render() {\n    const { placeholder, dataSource } = this.props;\n    const { value } = this.state;\n\n    return (\n      <AutoComplete\n        dataSource={dataSource}\n        style={{ width: 200 }}\n        onChange={this.onChange}\n        onSelect={this.onSelect}\n\n        filterOption={(inputValue, option) =>\n          // eslint-disable-next-line implicit-arrow-linebreak\n          option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n        }\n        placeholder={placeholder}\n        value={value}\n        allowClear\n      />\n    );\n  }\n}\n\n// props validation\nAutoCompleteSearch.propTypes = {\n  placeholder: PropTypes.string,\n  dataSource: PropTypes.arrayOf(PropTypes.string),\n  clear: PropTypes.number,\n  onSelectedValue: PropTypes.func,\n  onInputChange: PropTypes.func,\n};\n\nAutoCompleteSearch.defaultProps = {\n  placeholder: '',\n  dataSource: [],\n  clear: 0,\n  onSelectedValue: () => {},\n  onInputChange: () => {},\n};\n","import React, { Component } from 'react';\n\nimport {\n  Form, Button, Row, Col, InputNumber,\n} from 'antd';\n\nimport PropTypes from 'prop-types';\nimport AutoCompleteSearch from './AutoCompleteSearch';\n\nimport 'react-table/react-table.css';\n\nexport default class TableSearch extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedMake: '',\n      inputMake: '',\n      inputModel: '',\n      clearMakeCtr: 0,\n      clearModelCtr: 0,\n      expand: false,\n      minYear: null,\n      maxYear: null,\n      minPrice: null,\n      maxPrice: null,\n    };\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n\n    this.handleMakeSelected = this.handleMakeSelected.bind(this);\n    // this.handleModelSelected = this.handleModelSelected.bind(this);\n\n    this.handleMakeInputChange = this.handleMakeInputChange.bind(this);\n    this.handleModelInputChange = this.handleModelInputChange.bind(this);\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    const { onSearch } = this.props;\n    const {\n      inputMake, inputModel, minYear, maxYear, minPrice, maxPrice,\n    } = this.state;\n    const search = {\n      make: inputMake,\n      model: inputModel,\n      minYear,\n      maxYear,\n      minPrice,\n      maxPrice,\n    };\n    onSearch(search);\n  }\n\n  handleReset() {\n    const { onSearch } = this.props;\n    this.setState(prev => ({\n      selectedMake: '',\n      inputMake: '',\n      inputModel: '',\n      clearMakeCtr: prev.clearMakeCtr + 1,\n      clearModelCtr: prev.clearModelCtr + 1,\n      minYear: null,\n      maxYear: null,\n      minPrice: null,\n      maxPrice: null,\n    }));\n    onSearch({});\n  }\n\n  handleMakeSelected(value) {\n    this.setState(prev => ({\n      selectedMake: value,\n      clearModelCtr: prev.clearModelCtr + 1,\n    }));\n  }\n\n  handleMakeInputChange(value) {\n    let { clearModelCtr } = this.state;\n    if (value === '') {\n      clearModelCtr += 1;\n    }\n    this.setState({\n      inputMake: value,\n      clearModelCtr,\n    });\n  }\n\n  handleModelInputChange(value) {\n    this.setState({\n      inputModel: value,\n    });\n  }\n\n  toggle() {\n    const { expand } = this.state;\n    this.setState({\n      expand: !expand,\n    });\n  }\n\n\n  render() {\n    const {\n      selectedMake, clearMakeCtr, clearModelCtr, expand, minYear, maxYear, minPrice, maxPrice,\n    } = this.state;\n    const { makes } = this.props;\n\n    return (\n      <div>\n        <Form layout=\"inline\" className=\"ant-advanced-search-form\" onSubmit={this.handleSearch}>\n          <Row>\n            <Col span={18} offset={4}>\n              <Form.Item label=\"Marka\">\n                <AutoCompleteSearch\n                  placeholder=\"Ford\"\n                  dataSource={Object.keys(makes).sort()}\n                  onSelectedValue={this.handleMakeSelected}\n                  onInputChange={this.handleMakeInputChange}\n                  clear={clearMakeCtr}\n                />\n              </Form.Item>\n              <Form.Item label=\"Model\">\n                <AutoCompleteSearch\n                  placeholder=\"Escape\"\n                  dataSource={makes[selectedMake] !== undefined\n                    ? makes[selectedMake].sort() : undefined}\n                  onInputChange={this.handleModelInputChange}\n                  clear={clearModelCtr}\n                />\n              </Form.Item>\n\n\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" icon=\"search\" onClick={this.handleSearch}>Szukaj</Button>\n              </Form.Item>\n              <Form.Item>\n                <Button type=\"danger\" icon=\"delete\" onClick={this.handleReset}>Wyczyść</Button>\n              </Form.Item>\n              <Form.Item>\n                <Button\n                  type=\"dashed\"\n                  icon={expand ? 'up' : 'down'}\n                  onClick={this.toggle}\n                >\n                  {expand ? 'Mniej' : 'Więcej'}\n                </Button>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row style={{ display: expand ? 'block' : 'none' }}>\n            <Col span={5} offset={4}>\n              <Form.Item label=\"Rok od\">\n                <InputNumber\n                  style={{ width: 100 }}\n                  onChange={(val) => { this.setState({ minYear: val === '' ? null : val }); }}\n                  value={minYear}\n                />\n              </Form.Item>\n              <Form.Item label=\"do\">\n                <InputNumber\n                  style={{ width: 100 }}\n                  onChange={(val) => { this.setState({ maxYear: val === '' ? null : val }); }}\n                  value={maxYear}\n                />\n              </Form.Item>\n            </Col>\n            <Col span={5}>\n              <Form.Item label=\"Cena od\">\n                <InputNumber\n                  style={{ width: 100 }}\n                  formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                  parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                  step={100}\n                  onChange={(val) => { this.setState({ minPrice: val === '' ? null : val }); }}\n                  value={minPrice}\n                />\n              </Form.Item>\n              <Form.Item label=\"do\">\n                <InputNumber\n                  style={{ width: 100 }}\n                  formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                  parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                  step={100}\n                  onChange={(val) => { this.setState({ maxPrice: val === '' ? null : val }); }}\n                  value={maxPrice}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\n// props validation\nTableSearch.propTypes = {\n  makes: PropTypes.objectOf(PropTypes.object),\n  onSearch: PropTypes.func,\n};\n\nTableSearch.defaultProps = {\n  makes: {},\n  onSearch: () => { },\n};\n","/* eslint-disable no-await-in-loop */\nimport React, { Component } from 'react';\nimport { Table } from 'antd';\nimport PropTypes from 'prop-types';\n// import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\n\nimport 'antd/dist/antd.css';\nimport '../styles/table.css';\n\nexport default class TableNew extends Component {\n  locationDict = {\n    201: 'Toronto',\n    202: 'London',\n    205: 'Montreal',\n    206: 'Montcon',\n    207: 'Halifax',\n    295: 'Atlantic',\n  };\n\n  columns = [{\n    title: 'LotID',\n    key: 'lotID',\n    dataIndex: 'lotID',\n    render: text => <a href={`http://www.copart.ca/lot/${text}`} target=\"_blank\" rel=\"noopener noreferrer\">{text}</a>,\n    width: '9%',\n  }, {\n    title: 'Marka',\n    dataIndex: 'make',\n    width: '9%',\n    key: 'make',\n  }, {\n    title: 'Model',\n    key: 'model',\n    dataIndex: 'model',\n    width: '9%',\n  }, {\n    title: 'Rocznik',\n    key: 'year',\n    dataIndex: 'year',\n    width: '9%',\n  }, {\n    title: 'Cena',\n    key: 'price',\n    dataIndex: 'price',\n    width: '9%',\n  }, {\n    title: 'PL',\n    key: 'plPrice',\n    dataIndex: 'plPrice',\n    width: '9%',\n  }, {\n    title: 'UA',\n    key: 'uaPrice',\n    dataIndex: 'uaPrice',\n    width: '9%',\n  }, {\n    title: 'Kupiec',\n    key: 'buyer',\n    dataIndex: 'buyer',\n    filters: [\n      { text: 'Ontario', value: 'ON' },\n      { text: 'Quebec', value: 'QC' },\n      { text: 'Polska', value: 'PL' },\n      { text: 'Ukraina', value: 'UA' },\n    ],\n    width: '7%',\n  }, {\n    title: 'Uszkodzenia',\n    key: 'damage',\n    dataIndex: 'details.Primary Damage',\n    width: 'auto',\n    filters: [\n      { text: 'Przód', value: 'FRONT END' },\n      { text: 'Tył', value: 'REAR END' },\n      { text: 'Bok', value: 'SIDE' },\n      { text: 'All over', value: 'ALL OVER' },\n      { text: 'Spalony', value: 'BURN' },\n      { text: 'Podwozie', value: 'UNDERCARRIAGE' },\n      { text: 'Zalany', value: 'WATER/FLOOD' },\n      { text: 'Zużycie', value: 'NORMAL WEAR' },\n      { text: 'Mechaniczne', value: 'MECHANICAL' },\n      { text: 'Przytarcia', value: 'MINOR DENT/SCRATCHES' },\n\n    ],\n  }, {\n    title: 'Lokalizacja',\n    key: 'location',\n    dataIndex: 'location',\n    width: '9%',\n    render: text => <div>{this.locationDict[text]}</div>,\n    filters: [\n      { text: 'Toronto', value: 201 },\n      { text: 'London', value: 202 },\n      { text: 'Montreal', value: 205 },\n      { text: 'Montcon', value: 206 },\n      { text: 'Halifax', value: 207 },\n      { text: 'Atlantic', value: 295 },\n    ]\n    ,\n  }, {\n    title: 'Data',\n    key: 'createdAt',\n    dataIndex: 'createdAt',\n    width: '9%',\n    render: (text) => {\n      if (text == null) {\n        return <div />;\n      }\n      const date = new Date(text);\n      const dateString = `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}`;\n      return <div>{dateString}</div>;\n    },\n\n  }];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: this.columns,\n      docs: [],\n      pagination: {\n        pageSize: 20,\n        showQuickJumper: true,\n        // showSizeChanger: true,\n      },\n      loading: false,\n    };\n    this.componentWillReceiveProps = this.componentWillReceiveProps.bind(this);\n    this.handleTableChange = this.handleTableChange.bind(this);\n  }\n\n\n  componentWillReceiveProps(nextProp) {\n    const { docs, pagination: pageInfo, loading } = nextProp;\n    this.setState({\n      docs,\n      pagination: pageInfo,\n      loading,\n    });\n  }\n\n  handleTableChange(pagination, filters, sorter) {\n    // if (filters) {\n    //   if (filters.make) {\n    //     this.setState((state) => {\n    //       const { columns, makes } = state;\n\n    //       if (filters.make.length === 1) {\n    //         const modelList = makes[filters.make[0]].sort();\n    //         const filterList = [];\n    //         modelList.forEach((key) => {\n    //           filterList.push({ text: key, value: key });\n    //         });\n    //         columns[2].filters = filterList;\n    //       } else {\n    //         columns[2].filters = {};\n    //       }\n    //       return {\n    //         columns,\n    //       };\n    //     });\n    //   }\n    // }\n\n    // if (filters.make) {\n    //   if (filters.make.length === 0) {\n    //     // eslint-disable-next-line no-param-reassign\n    //     filters.model = [];\n    //   }\n    // }\n    const { onTableChange } = this.props;\n    onTableChange(pagination, filters, sorter);\n  }\n\n  render() {\n    const {\n      docs, columns, pagination, loading,\n    } = this.state;\n\n    return (\n      <div>\n\n        <Table\n          dataSource={docs}\n          columns={columns}\n          pagination={pagination}\n          onChange={this.handleTableChange}\n          size=\"small\"\n          loading={loading}\n        />\n      </div>\n    );\n  }\n}\n\n// props validation\nTableNew.propTypes = {\n  onTableChange: PropTypes.func,\n  // eslint-disable-next-line react/no-unused-prop-types\n  loading: PropTypes.bool,\n};\n\nTableNew.defaultProps = {\n  onTableChange: () => { },\n  loading: false,\n};\n","const test = {\n  API_URL: 'http://35.225.156.136:3001',\n};\n\nconst prod = {\n  API_URL: 'http://35.225.156.136:3001',\n};\n\nconst config = process.env.NODE_ENV === 'production' ? prod : test;\n\n// const config = prod;\n\nexport default {\n  config,\n};\n","import React, { Component } from 'react';\n\nimport TableSearch from './TableSearch';\nimport TableNew from './TableNew';\nimport conf from '../conf';\n\nfunction queryStringFor(field, query) {\n  let qs = '';\n  if (query[field]) {\n    query[field].forEach((x) => {\n      qs += `&${field}=${x}`;\n    });\n  }\n  return qs;\n}\n\nexport default class TableSearchParent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      makes: {},\n      search: {},\n      docs: [],\n      pagination: {},\n      filters: {},\n      loading: false,\n    };\n\n    this.getPage = this.getPage.bind(this);\n    this.handleTableChange = this.handleTableChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getMakes();\n    this.getPage(1, 20);\n  }\n\n  async getMakes() {\n    const recvData = await fetch(`${conf.config.API_URL}/api/makes`);\n    const json = await recvData.json();\n    this.setState({\n      makes: json,\n    });\n  }\n\n  async getPage(page, pageSize, query) {\n    let queryString = '';\n    if (query) {\n      const queryParams = ['make', 'model', 'buyer', 'location'];\n      queryParams.forEach((param) => {\n        queryString += queryStringFor(param, query);\n      });\n    }\n\n    const recvData = await fetch(`${conf.config.API_URL}/api/lots?page=${page}&pageSize=${pageSize}${queryString}`);\n    const data = await recvData.json();\n    const { pagination } = this.state;\n    const { documents, meta } = data;\n\n    pagination.total = meta.totalCount;\n    this.setState({\n      docs: documents,\n      pagination,\n      loading: false,\n    });\n  }\n\n  searchPage = async (pageData, search, filters, sorters) => {\n    const recvData = await fetch(`${conf.config.API_URL}/api/lots/search`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        pagination: pageData,\n        search,\n        filters,\n        sorters,\n      }),\n    });\n    const data = await recvData.json();\n    const { documents, meta } = data;\n\n    this.setState(prev => ({\n      docs: documents,\n      pagination: {\n        ...prev.pagination,\n        total: meta.totalCount,\n      },\n      loading: false,\n    }));\n  }\n\n  handleSearch = (value) => {\n    this.setState({\n      search: value,\n      loading: true,\n    });\n    const { pagination, filters } = this.state;\n    this.searchPage(pagination, value, filters);\n  }\n\n  handleSearchReset = () => {\n    this.setState({\n      search: {},\n    });\n  }\n\n  handleTableChange(pageInfo, filters, sorter) {\n    const { search } = this.state;\n    const pagination = {\n      page: pageInfo.current,\n      pageSize: pageInfo.pageSize,\n    };\n    this.setState({\n      pagination,\n      filters,\n    });\n    const { pageSize, page } = pagination;\n    if (Object.entries(search).length === 0 && search.constructor === Object) {\n      this.getPage(page, pageSize, filters);\n    } else {\n      this.searchPage(pagination, search, filters, sorter);\n    }\n  }\n\n  render() {\n    const {\n      makes, docs, pagination, loading,\n    } = this.state;\n\n    return (\n      <div>\n        <TableSearch\n          makes={makes}\n          onSearch={this.handleSearch}\n        />\n        <TableNew\n          docs={docs}\n          pagination={pagination}\n          onTableChange={this.handleTableChange}\n          loading={loading}\n        />\n      </div>\n\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Input, Button, Form } from 'antd';\n\nimport TableNew from './TableNew';\n\nimport conf from '../conf';\n\nexport default class AuctionParent extends Component {\n  constructor() {\n    super();\n    this.state = {\n      value: '',\n      docs: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getLot = this.getLot.bind(this);\n  }\n\n  async getLot(lotID) {\n    const recvData = await fetch(`${conf.config.API_URL}/api/lots/${lotID}`);\n    const data = await recvData.json();\n\n    this.setState({\n      docs: data,\n    });\n  }\n\n  handleChange(e) {\n    const { value } = e.target;\n    this.setState({\n      value,\n    });\n  }\n\n  handleSubmit() {\n    const { value } = this.state;\n    this.getLot(value);\n  }\n\n\n  render() {\n    const { docs } = this.state;\n\n    return (\n      <div>\n        <div className=\"TableSearch\">\n          <Form layout=\"inline\">\n            <Form.Item label=\"LotID\">\n              <Input onChange={this.handleChange} />\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" icon=\"search\" onClick={this.handleSubmit} />\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"danger\" icon=\"delete\" />\n            </Form.Item>\n          </Form>\n        </div>\n        <TableNew docs={docs} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport { Menu } from 'antd';\n\nimport TableSearchParent from './TableSearchParent';\nimport AuctionParent from './AuctionParent';\n// import { from } from 'rxjs';\n\nexport default class Main extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <HeaderMenu />\n\n          <Route exact path=\"/\" component={TableSearchParent} />\n          <Route path=\"/lot\" component={AuctionParent} />\n\n        </Router>\n\n\n      </div>\n    );\n  }\n}\n\nfunction HeaderMenu() {\n  return (\n    <Menu mode=\"horizontal\" defaultSelectedKeys={['table']}>\n      <Menu.Item key=\"table\">\n        <Link to=\"/\">Tabela</Link>\n      </Menu.Item>\n      <Menu.Item key=\"auctions\">\n        <Link to=\"/lot\">Aukcje</Link>\n      </Menu.Item>\n    </Menu>\n  );\n}\n","import React, { Component } from 'react';\nimport Main from './components/Main';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}